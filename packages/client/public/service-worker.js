"use strict";(()=>{try{self["workbox:core:6.5.2"]&&_()}catch{}var se={"invalid-value":({paramName:r,validValueDescription:e,value:t})=>{if(!r||!e)throw new Error("Unexpected input to 'invalid-value' error.");return`The '${r}' parameter was given a value with an unexpected value. ${e} Received a value of ${JSON.stringify(t)}.`},"not-an-array":({moduleName:r,className:e,funcName:t,paramName:o})=>{if(!r||!e||!t||!o)throw new Error("Unexpected input to 'not-an-array' error.");return`The parameter '${o}' passed into '${r}.${e}.${t}()' must be an array.`},"incorrect-type":({expectedType:r,paramName:e,moduleName:t,className:o,funcName:s})=>{if(!r||!e||!t||!s)throw new Error("Unexpected input to 'incorrect-type' error.");let n=o?`${o}.`:"";return`The parameter '${e}' passed into '${t}.${n}${s}()' must be of type ${r}.`},"incorrect-class":({expectedClassName:r,paramName:e,moduleName:t,className:o,funcName:s,isReturnValueProblem:n})=>{if(!r||!t||!s)throw new Error("Unexpected input to 'incorrect-class' error.");let i=o?`${o}.`:"";return n?`The return value from '${t}.${i}${s}()' must be an instance of class ${r}.`:`The parameter '${e}' passed into '${t}.${i}${s}()' must be an instance of class ${r}.`},"missing-a-method":({expectedMethod:r,paramName:e,moduleName:t,className:o,funcName:s})=>{if(!r||!e||!t||!o||!s)throw new Error("Unexpected input to 'missing-a-method' error.");return`${t}.${o}.${s}() expected the '${e}' parameter to expose a '${r}' method.`},"add-to-cache-list-unexpected-type":({entry:r})=>`An unexpected entry was passed to 'workbox-precaching.PrecacheController.addToCacheList()' The entry '${JSON.stringify(r)}' isn't supported. You must supply an array of strings with one or more characters, objects with a url property or Request objects.`,"add-to-cache-list-conflicting-entries":({firstEntry:r,secondEntry:e})=>{if(!r||!e)throw new Error("Unexpected input to 'add-to-cache-list-duplicate-entries' error.");return`Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL ${r} but different revision details. Workbox is unable to cache and version the asset correctly. Please remove one of the entries.`},"plugin-error-request-will-fetch":({thrownErrorMessage:r})=>{if(!r)throw new Error("Unexpected input to 'plugin-error-request-will-fetch', error.");return`An error was thrown by a plugins 'requestWillFetch()' method. The thrown error message was: '${r}'.`},"invalid-cache-name":({cacheNameId:r,value:e})=>{if(!r)throw new Error("Expected a 'cacheNameId' for error 'invalid-cache-name'");return`You must provide a name containing at least one character for setCacheDetails({${r}: '...'}). Received a value of '${JSON.stringify(e)}'`},"unregister-route-but-not-found-with-method":({method:r})=>{if(!r)throw new Error("Unexpected input to 'unregister-route-but-not-found-with-method' error.");return`The route you're trying to unregister was not  previously registered for the method type '${r}'.`},"unregister-route-route-not-registered":()=>"The route you're trying to unregister was not previously registered.","queue-replay-failed":({name:r})=>`Replaying the background sync queue '${r}' failed.`,"duplicate-queue-name":({name:r})=>`The Queue name '${r}' is already being used. All instances of backgroundSync.Queue must be given unique names.`,"expired-test-without-max-age":({methodName:r,paramName:e})=>`The '${r}()' method can only be used when the '${e}' is used in the constructor.`,"unsupported-route-type":({moduleName:r,className:e,funcName:t,paramName:o})=>`The supplied '${o}' parameter was an unsupported type. Please check the docs for ${r}.${e}.${t} for valid input types.`,"not-array-of-class":({value:r,expectedClass:e,moduleName:t,className:o,funcName:s,paramName:n})=>`The supplied '${n}' parameter must be an array of '${e}' objects. Received '${JSON.stringify(r)},'. Please check the call to ${t}.${o}.${s}() to fix the issue.`,"max-entries-or-age-required":({moduleName:r,className:e,funcName:t})=>`You must define either config.maxEntries or config.maxAgeSecondsin ${r}.${e}.${t}`,"statuses-or-headers-required":({moduleName:r,className:e,funcName:t})=>`You must define either config.statuses or config.headersin ${r}.${e}.${t}`,"invalid-string":({moduleName:r,funcName:e,paramName:t})=>{if(!t||!r||!e)throw new Error("Unexpected input to 'invalid-string' error.");return`When using strings, the '${t}' parameter must start with 'http' (for cross-origin matches) or '/' (for same-origin matches). Please see the docs for ${r}.${e}() for more info.`},"channel-name-required":()=>"You must provide a channelName to construct a BroadcastCacheUpdate instance.","invalid-responses-are-same-args":()=>"The arguments passed into responsesAreSame() appear to be invalid. Please ensure valid Responses are used.","expire-custom-caches-only":()=>"You must provide a 'cacheName' property when using the expiration plugin with a runtime caching strategy.","unit-must-be-bytes":({normalizedRangeHeader:r})=>{if(!r)throw new Error("Unexpected input to 'unit-must-be-bytes' error.");return`The 'unit' portion of the Range header must be set to 'bytes'. The Range header provided was "${r}"`},"single-range-only":({normalizedRangeHeader:r})=>{if(!r)throw new Error("Unexpected input to 'single-range-only' error.");return`Multiple ranges are not supported. Please use a  single start value, and optional end value. The Range header provided was "${r}"`},"invalid-range-values":({normalizedRangeHeader:r})=>{if(!r)throw new Error("Unexpected input to 'invalid-range-values' error.");return`The Range header is missing both start and end values. At least one of those values is needed. The Range header provided was "${r}"`},"no-range-header":()=>"No Range header was found in the Request provided.","range-not-satisfiable":({size:r,start:e,end:t})=>`The start (${e}) and end (${t}) values in the Range are not satisfiable by the cached response, which is ${r} bytes.`,"attempt-to-cache-non-get-request":({url:r,method:e})=>`Unable to cache '${r}' because it is a '${e}' request and only 'GET' requests can be cached.`,"cache-put-with-no-response":({url:r})=>`There was an attempt to cache '${r}' but the response was not defined.`,"no-response":({url:r,error:e})=>{let t=`The strategy could not generate a response for '${r}'.`;return e&&(t+=` The underlying error is ${e}.`),t},"bad-precaching-response":({url:r,status:e})=>`The precaching request for '${r}' failed`+(e?` with an HTTP status of ${e}.`:"."),"non-precached-url":({url:r})=>`createHandlerBoundToURL('${r}') was called, but that URL is not precached. Please pass in a URL that is precached instead.`,"add-to-cache-list-conflicting-integrities":({url:r})=>`Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL ${r} with different integrity values. Please remove one of them.`,"missing-precache-entry":({cacheName:r,url:e})=>`Unable to find a precached response in ${r} for ${e}.`,"cross-origin-copy-response":({origin:r})=>`workbox-core.copyResponse() can only be used with same-origin responses. It was passed a response with origin ${r}.`,"opaque-streams-source":({type:r})=>{let e=`One of the workbox-streams sources resulted in an '${r}' response.`;return r==="opaqueredirect"?`${e} Please do not use a navigation request that results in a redirect as a source.`:`${e} Please ensure your sources are CORS-enabled.`}};var de=(r,...e)=>{let t=r;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},ge=(r,e={})=>{let t=se[r];if(!t)throw new Error(`Unable to find message for code '${r}'.`);return t(e)},ne=!1==="production"?de:ge;var l=class extends Error{constructor(e,t){let o=ne(e,t);super(o),this.name=e,this.details=t}};var we=(r,e)=>{if(!Array.isArray(r))throw new l("not-an-array",e)},ye=(r,e,t)=>{if(typeof r[e]!=="function")throw t.expectedMethod=e,new l("missing-a-method",t)},Ne=(r,e,t)=>{if(typeof r!==e)throw t.expectedType=e,new l("incorrect-type",t)},Ee=(r,e,t)=>{if(!(r instanceof e))throw t.expectedClassName=e.name,new l("incorrect-class",t)},be=(r,e,t)=>{if(!e.includes(r))throw t.validValueDescription=`Valid values are ${JSON.stringify(e)}.`,new l("invalid-value",t)},Re=(r,e,t)=>{let o=new l("not-array-of-class",t);if(!Array.isArray(r))throw o;for(let s of r)if(!(s instanceof e))throw o},p=!1==="production"?null:{hasMethod:ye,isArray:we,isInstance:Ee,isOneOf:be,isType:Ne,isArrayOfClass:Re};var E={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},G=r=>[E.prefix,r,E.suffix].filter(e=>e&&e.length>0).join("-"),_e=r=>{for(let e of Object.keys(E))r(e)},N={updateDetails:r=>{_e(e=>{typeof r[e]=="string"&&(E[e]=r[e])})},getGoogleAnalyticsName:r=>r||G(E.googleAnalytics),getPrecacheName:r=>r||G(E.precache),getPrefix:()=>E.prefix,getRuntimeName:r=>r||G(E.runtime),getSuffix:()=>E.suffix};var a=!1==="production"?null:(()=>{"__WB_DISABLE_DEV_LOGS"in self||(self.__WB_DISABLE_DEV_LOGS=!1);let r=!1,e={debug:"#7f8c8d",log:"#2ecc71",warn:"#f39c12",error:"#c0392b",groupCollapsed:"#3498db",groupEnd:null},t=function(n,i){if(self.__WB_DISABLE_DEV_LOGS)return;if(n==="groupCollapsed"&&/^((?!chrome|android).)*safari/i.test(navigator.userAgent)){console[n](...i);return}let c=[`background: ${e[n]}`,"border-radius: 0.5em","color: white","font-weight: bold","padding: 2px 0.5em"],u=r?[]:["%cworkbox",c.join(";")];console[n](...u,...i),n==="groupCollapsed"&&(r=!0),n==="groupEnd"&&(r=!1)},o={},s=Object.keys(e);for(let n of s){let i=n;o[i]=(...c)=>{t(i,c)}}return o})();function I(r,e){let t=e();return r.waitUntil(t),t}try{self["workbox:precaching:6.5.2"]&&_()}catch{}var xe="__WB_REVISION__";function ae(r){if(!r)throw new l("add-to-cache-list-unexpected-type",{entry:r});if(typeof r=="string"){let n=new URL(r,location.href);return{cacheKey:n.href,url:n.href}}let{revision:e,url:t}=r;if(!t)throw new l("add-to-cache-list-unexpected-type",{entry:r});if(!e){let n=new URL(t,location.href);return{cacheKey:n.href,url:n.href}}let o=new URL(t,location.href),s=new URL(t,location.href);return o.searchParams.set(xe,e),{cacheKey:o.href,url:s.href}}var K=class{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:o})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){let s=t.originalRequest.url;o?this.notUpdatedURLs.push(s):this.updatedURLs.push(s)}return o}}};var F=class{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:o})=>{let s=o?.cacheKey||this._precacheController.getCacheKeyForURL(t.url);return s?new Request(s,{headers:t.headers}):t},this._precacheController=e}};var Ce=(r,e)=>{a.groupCollapsed(r);for(let t of e)a.log(t);a.groupEnd()};function ie(r){let e=r.length;e>0&&(a.groupCollapsed(`During precaching cleanup, ${e} cached request${e===1?" was":"s were"} deleted.`),Ce("Deleted Cache Requests",r),a.groupEnd())}function ce(r,e){if(e.length!==0){a.groupCollapsed(r);for(let t of e)a.log(t);a.groupEnd()}}function le(r,e){let t=r.length,o=e.length;if(t||o){let s=`Precaching ${t} file${t===1?"":"s"}.`;o>0&&(s+=` ${o} file${o===1?" is":"s are"} already cached.`),a.groupCollapsed(s),ce("View newly precached URLs.",r),ce("View previously precached URLs.",e),a.groupEnd()}}var v;function B(){if(v===void 0){let r=new Response("");if("body"in r)try{new Response(r.body),v=!0}catch{v=!1}v=!1}return v}async function J(r,e){let t=null;if(r.url&&(t=new URL(r.url).origin),t!==self.location.origin)throw new l("cross-origin-copy-response",{origin:t});let o=r.clone(),s={headers:new Headers(o.headers),status:o.status,statusText:o.statusText},n=e?e(s):s,i=B()?o.body:await o.blob();return new Response(i,n)}var h=r=>new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),"");function ue(r,e){let t=new URL(r);for(let o of e)t.searchParams.delete(o);return t.href}async function Q(r,e,t,o){let s=ue(e.url,t);if(e.url===s)return r.match(e,o);let n=Object.assign(Object.assign({},o),{ignoreSearch:!0}),i=await r.keys(e,n);for(let c of i){let u=ue(c.url,t);if(s===u)return r.match(c,o)}}var k=class{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}};var q=new Set;async function Y(){!1!=="production"&&a.log(`About to run ${q.size} callbacks to clean up caches.`);for(let r of q)await r(),!1!=="production"&&a.log(r,"is complete.");!1!=="production"&&a.log("Finished running callbacks.")}function O(r){return new Promise(e=>setTimeout(e,r))}try{self["workbox:strategies:6.5.2"]&&_()}catch{}function M(r){return typeof r=="string"?new Request(r):r}var T=class{constructor(e,t){this._cacheKeys={},!1!=="production"&&p.isInstance(t.event,ExtendableEvent,{moduleName:"workbox-strategies",className:"StrategyHandler",funcName:"constructor",paramName:"options.event"}),Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new k,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(let o of this._plugins)this._pluginStateMap.set(o,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){let{event:t}=this,o=M(e);if(o.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){let i=await t.preloadResponse;if(i)return!1!=="production"&&a.log(`Using a preloaded navigation response for '${h(o.url)}'`),i}let s=this.hasCallback("fetchDidFail")?o.clone():null;try{for(let i of this.iterateCallbacks("requestWillFetch"))o=await i({request:o.clone(),event:t})}catch(i){if(i instanceof Error)throw new l("plugin-error-request-will-fetch",{thrownErrorMessage:i.message})}let n=o.clone();try{let i;i=await fetch(o,o.mode==="navigate"?void 0:this._strategy.fetchOptions),!1!=="production"&&a.debug(`Network request for '${h(o.url)}' returned a response with status '${i.status}'.`);for(let c of this.iterateCallbacks("fetchDidSucceed"))i=await c({event:t,request:n,response:i});return i}catch(i){throw!1!=="production"&&a.log(`Network request for '${h(o.url)}' threw an error.`,i),s&&await this.runCallbacks("fetchDidFail",{error:i,event:t,originalRequest:s.clone(),request:n.clone()}),i}}async fetchAndCachePut(e){let t=await this.fetch(e),o=t.clone();return this.waitUntil(this.cachePut(e,o)),t}async cacheMatch(e){let t=M(e),o,{cacheName:s,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),c=Object.assign(Object.assign({},n),{cacheName:s});o=await caches.match(i,c),!1!=="production"&&(o?a.debug(`Found a cached response in '${s}'.`):a.debug(`No cached response found in '${s}'.`));for(let u of this.iterateCallbacks("cachedResponseWillBeUsed"))o=await u({cacheName:s,matchOptions:n,cachedResponse:o,request:i,event:this.event})||void 0;return o}async cachePut(e,t){let o=M(e);await O(0);let s=await this.getCacheKey(o,"write");if(!1!=="production"){if(s.method&&s.method!=="GET")throw new l("attempt-to-cache-non-get-request",{url:h(s.url),method:s.method});let m=t.headers.get("Vary");m&&a.debug(`The response for ${h(s.url)} has a 'Vary: ${m}' header. Consider setting the {ignoreVary: true} option on your strategy to ensure cache matching and deletion works as expected.`)}if(!t)throw!1!=="production"&&a.error(`Cannot cache non-existent response for '${h(s.url)}'.`),new l("cache-put-with-no-response",{url:h(s.url)});let n=await this._ensureResponseSafeToCache(t);if(!n)return!1!=="production"&&a.debug(`Response '${h(s.url)}' will not be cached.`,n),!1;let{cacheName:i,matchOptions:c}=this._strategy,u=await self.caches.open(i),w=this.hasCallback("cacheDidUpdate"),R=w?await Q(u,s.clone(),["__WB_REVISION__"],c):null;!1!=="production"&&a.debug(`Updating the '${i}' cache with a new Response for ${h(s.url)}.`);try{await u.put(s,w?n.clone():n)}catch(m){if(m instanceof Error)throw m.name==="QuotaExceededError"&&await Y(),m}for(let m of this.iterateCallbacks("cacheDidUpdate"))await m({cacheName:i,oldResponse:R,newResponse:n.clone(),request:s,event:this.event});return!0}async getCacheKey(e,t){let o=`${e.url} | ${t}`;if(!this._cacheKeys[o]){let s=e;for(let n of this.iterateCallbacks("cacheKeyWillBeUsed"))s=M(await n({mode:t,request:s,event:this.event,params:this.params}));this._cacheKeys[o]=s}return this._cacheKeys[o]}hasCallback(e){for(let t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(let o of this.iterateCallbacks(e))await o(t)}*iterateCallbacks(e){for(let t of this._strategy.plugins)if(typeof t[e]=="function"){let o=this._pluginStateMap.get(t);yield n=>{let i=Object.assign(Object.assign({},n),{state:o});return t[e](i)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,o=!1;for(let s of this.iterateCallbacks("cacheWillUpdate"))if(t=await s({request:this.request,response:t,event:this.event})||void 0,o=!0,!t)break;return o||(t&&t.status!==200&&(t=void 0),!1!=="production"&&t&&t.status!==200&&(t.status===0?a.warn(`The response for '${this.request.url}' is an opaque response. The caching strategy that you're using will not cache opaque responses by default.`):a.debug(`The response for '${this.request.url}' returned a status code of '${e.status}' and won't be cached as a result.`))),t}};var g=class{constructor(e={}){this.cacheName=N.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){let[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});let t=e.event,o=typeof e.request=="string"?new Request(e.request):e.request,s="params"in e?e.params:void 0,n=new T(this,{event:t,request:o,params:s}),i=this._getResponse(n,o,t),c=this._awaitComplete(i,n,o,t);return[i,c]}async _getResponse(e,t,o){await e.runCallbacks("handlerWillStart",{event:o,request:t});let s;try{if(s=await this._handle(t,e),!s||s.type==="error")throw new l("no-response",{url:t.url})}catch(n){if(n instanceof Error){for(let i of e.iterateCallbacks("handlerDidError"))if(s=await i({error:n,event:o,request:t}),s)break}if(s)!1!=="production"&&a.log(`While responding to '${h(t.url)}', an ${n instanceof Error?n.toString():""} error occurred. Using a fallback response provided by a handlerDidError plugin.`);else throw n}for(let n of e.iterateCallbacks("handlerWillRespond"))s=await n({event:o,request:t,response:s});return s}async _awaitComplete(e,t,o,s){let n,i;try{n=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:s,request:o,response:n}),await t.doneWaiting()}catch(c){c instanceof Error&&(i=c)}if(await t.runCallbacks("handlerDidComplete",{event:s,request:o,response:n,error:i}),t.destroy(),i)throw i}};var f=class extends g{constructor(e={}){e.cacheName=N.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(f.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){let o=await t.cacheMatch(e);return o||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let o,s=t.params||{};if(this._fallbackToNetwork){!1!=="production"&&a.warn(`The precached response for ${h(e.url)} in ${this.cacheName} was not found. Falling back to the network.`);let n=s.integrity,i=e.integrity,c=!i||i===n;if(o=await t.fetch(new Request(e,{integrity:i||n})),n&&c){this._useDefaultCacheabilityPluginIfNeeded();let u=await t.cachePut(e,o.clone());!1!=="production"&&u&&a.log(`A response for ${h(e.url)} was used to "repair" the precache.`)}}else throw new l("missing-precache-entry",{cacheName:this.cacheName,url:e.url});if(!1!=="production"){let n=s.cacheKey||await t.getCacheKey(e,"read");a.groupCollapsed("Precaching is responding to: "+h(e.url)),a.log(`Serving the precached url: ${h(n instanceof Request?n.url:n)}`),a.groupCollapsed("View request details here."),a.log(e),a.groupEnd(),a.groupCollapsed("View response details here."),a.log(o),a.groupEnd(),a.groupEnd()}return o}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();let o=await t.fetch(e);if(!await t.cachePut(e,o.clone()))throw new l("bad-precaching-response",{url:e.url,status:o.status});return o}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(let[o,s]of this.plugins.entries())s!==f.copyRedirectedCacheableResponsesPlugin&&(s===f.defaultPrecacheCacheabilityPlugin&&(e=o),s.cacheWillUpdate&&t++);t===0?this.plugins.push(f.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}};f.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:r}){return!r||r.status>=400?null:r}};f.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:r}){return r.redirected?await J(r):r}};var $=class{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:o=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new f({cacheName:N.getPrecacheName(e),plugins:[...t,new F({precacheController:this})],fallbackToNetwork:o}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){!1!=="production"&&p.isArray(e,{moduleName:"workbox-precaching",className:"PrecacheController",funcName:"addToCacheList",paramName:"entries"});let t=[];for(let o of e){typeof o=="string"?t.push(o):o&&o.revision===void 0&&t.push(o.url);let{cacheKey:s,url:n}=ae(o),i=typeof o!="string"&&o.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==s)throw new l("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:s});if(typeof o!="string"&&o.integrity){if(this._cacheKeysToIntegrities.has(s)&&this._cacheKeysToIntegrities.get(s)!==o.integrity)throw new l("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(s,o.integrity)}if(this._urlsToCacheKeys.set(n,s),this._urlsToCacheModes.set(n,i),t.length>0){let c=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;!1==="production"?console.warn(c):a.warn(c)}}}install(e){return I(e,async()=>{let t=new K;this.strategy.plugins.push(t);for(let[n,i]of this._urlsToCacheKeys){let c=this._cacheKeysToIntegrities.get(i),u=this._urlsToCacheModes.get(n),w=new Request(n,{integrity:c,cache:u,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:i},request:w,event:e}))}let{updatedURLs:o,notUpdatedURLs:s}=t;return!1!=="production"&&le(o,s),{updatedURLs:o,notUpdatedURLs:s}})}activate(e){return I(e,async()=>{let t=await self.caches.open(this.strategy.cacheName),o=await t.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(let i of o)s.has(i.url)||(await t.delete(i),n.push(i.url));return!1!=="production"&&ie(n),{deletedURLs:n}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){let t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){let t=e instanceof Request?e.url:e,o=this.getCacheKeyForURL(t);if(o)return(await self.caches.open(this.strategy.cacheName)).match(o)}createHandlerBoundToURL(e){let t=this.getCacheKeyForURL(e);if(!t)throw new l("non-precached-url",{url:e});return o=>(o.request=new Request(e),o.params=Object.assign({cacheKey:t},o.params),this.strategy.handle(o))}};var z,b=()=>(z||(z=new $),z);try{self["workbox:routing:6.5.2"]&&_()}catch{}var H="GET",pe=["DELETE","GET","HEAD","PATCH","POST","PUT"];var C=r=>r&&typeof r=="object"?(!1!=="production"&&p.hasMethod(r,"handle",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),r):(!1!=="production"&&p.isType(r,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),{handle:r});var d=class{constructor(e,t,o=H){!1!=="production"&&(p.isType(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"match"}),o&&p.isOneOf(o,pe,{paramName:"method"})),this.handler=C(t),this.match=e,this.method=o}setCatchHandler(e){this.catchHandler=C(e)}};var U=class extends d{constructor(e,t,o){!1!=="production"&&p.isInstance(e,RegExp,{moduleName:"workbox-routing",className:"RegExpRoute",funcName:"constructor",paramName:"pattern"});let s=({url:n})=>{let i=e.exec(n.href);if(!!i){if(n.origin!==location.origin&&i.index!==0){!1!=="production"&&a.debug(`The regular expression '${e.toString()}' only partially matched against the cross-origin URL '${n.toString()}'. RegExpRoute's will only handle cross-origin requests if they match the entire URL.`);return}return i.slice(1)}};super(s,t,o)}};var D=class{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{let{request:t}=e,o=this.handleRequest({request:t,event:e});o&&e.respondWith(o)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){let{payload:t}=e.data;!1!=="production"&&a.debug("Caching URLs from the window",t.urlsToCache);let o=Promise.all(t.urlsToCache.map(s=>{typeof s=="string"&&(s=[s]);let n=new Request(...s);return this.handleRequest({request:n,event:e})}));e.waitUntil(o),e.ports&&e.ports[0]&&o.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){!1!=="production"&&p.isInstance(e,Request,{moduleName:"workbox-routing",className:"Router",funcName:"handleRequest",paramName:"options.request"});let o=new URL(e.url,location.href);if(!o.protocol.startsWith("http")){!1!=="production"&&a.debug("Workbox Router only supports URLs that start with 'http'.");return}let s=o.origin===location.origin,{params:n,route:i}=this.findMatchingRoute({event:t,request:e,sameOrigin:s,url:o}),c=i&&i.handler,u=[];!1!=="production"&&c&&(u.push(["Found a route to handle this request:",i]),n&&u.push(["Passing the following params to the route's handler:",n]));let w=e.method;if(!c&&this._defaultHandlerMap.has(w)&&(!1!=="production"&&u.push(`Failed to find a matching route. Falling back to the default handler for ${w}.`),c=this._defaultHandlerMap.get(w)),!c){!1!=="production"&&a.debug(`No route found for: ${h(o)}`);return}!1!=="production"&&(a.groupCollapsed(`Router is responding to: ${h(o)}`),u.forEach(y=>{Array.isArray(y)?a.log(...y):a.log(y)}),a.groupEnd());let R;try{R=c.handle({url:o,request:e,event:t,params:n})}catch(y){R=Promise.reject(y)}let m=i&&i.catchHandler;return R instanceof Promise&&(this._catchHandler||m)&&(R=R.catch(async y=>{if(m){!1!=="production"&&(a.groupCollapsed(`Error thrown when responding to:  ${h(o)}. Falling back to route's Catch Handler.`),a.error("Error thrown by:",i),a.error(y),a.groupEnd());try{return await m.handle({url:o,request:e,event:t,params:n})}catch(oe){oe instanceof Error&&(y=oe)}}if(this._catchHandler)return!1!=="production"&&(a.groupCollapsed(`Error thrown when responding to:  ${h(o)}. Falling back to global Catch Handler.`),a.error("Error thrown by:",i),a.error(y),a.groupEnd()),this._catchHandler.handle({url:o,request:e,event:t});throw y})),R}findMatchingRoute({url:e,sameOrigin:t,request:o,event:s}){let n=this._routes.get(o.method)||[];for(let i of n){let c,u=i.match({url:e,sameOrigin:t,request:o,event:s});if(u)return!1!=="production"&&u instanceof Promise&&a.warn(`While routing ${h(e)}, an async matchCallback function was used. Please convert the following route to use a synchronous matchCallback function:`,i),c=u,(Array.isArray(c)&&c.length===0||u.constructor===Object&&Object.keys(u).length===0||typeof u=="boolean")&&(c=void 0),{route:i,params:c}}return{}}setDefaultHandler(e,t=H){this._defaultHandlerMap.set(t,C(e))}setCatchHandler(e){this._catchHandler=C(e)}registerRoute(e){!1!=="production"&&(p.isType(e,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),p.hasMethod(e,"match",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),p.isType(e.handler,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),p.hasMethod(e.handler,"handle",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.handler"}),p.isType(e.method,"string",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.method"})),this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new l("unregister-route-but-not-found-with-method",{method:e.method});let t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new l("unregister-route-route-not-registered")}};var P,j=()=>(P||(P=new D,P.addFetchListener(),P.addCacheListener()),P);function L(r,e,t){let o;if(typeof r=="string"){let n=new URL(r,location.href);if(!1!=="production"){if(!(r.startsWith("/")||r.startsWith("http")))throw new l("invalid-string",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});let c=r.startsWith("http")?n.pathname:r,u="[*:?+]";new RegExp(`${u}`).exec(c)&&a.debug(`The '$capture' parameter contains an Express-style wildcard character (${u}). Strings are now always interpreted as exact matches; use a RegExp for partial or wildcard matches.`)}let i=({url:c})=>(!1!=="production"&&c.pathname===n.pathname&&c.origin!==n.origin&&a.debug(`${r} only partially matches the cross-origin URL ${c.toString()}. This route will only handle cross-origin requests if they match the entire URL.`),c.href===n.href);o=new d(i,e,t)}else if(r instanceof RegExp)o=new U(r,e,t);else if(typeof r=="function")o=new d(r,e,t);else if(r instanceof d)o=r;else throw new l("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return j().registerRoute(o),o}function he(r,e=[]){for(let t of[...r.searchParams.keys()])e.some(o=>o.test(t))&&r.searchParams.delete(t);return r}function*me(r,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:o=!0,urlManipulation:s}={}){let n=new URL(r,location.href);n.hash="",yield n.href;let i=he(n,e);if(yield i.href,t&&i.pathname.endsWith("/")){let c=new URL(i.href);c.pathname+=t,yield c.href}if(o){let c=new URL(i.href);c.pathname+=".html",yield c.href}if(s){let c=s({url:n});for(let u of c)yield u.href}}var S=class extends d{constructor(e,t){let o=({request:s})=>{let n=e.getURLsToCacheKeys();for(let i of me(s.url,t)){let c=n.get(i);if(c){let u=e.getIntegrityForCacheKey(c);return{cacheKey:c,integrity:u}}}!1!=="production"&&a.debug("Precaching did not find a match for "+h(s.url))};super(o,e.strategy)}};function X(r){let e=b(),t=new S(e,r);L(t)}function Z(r){b().precache(r)}function ee(r,e){Z(r),X(e)}function te(){self.addEventListener("activate",()=>self.clients.claim())}var x={strategyStart:(r,e)=>`Using ${r} to respond to '${h(e.url)}'`,printFinalResponse:r=>{r&&(a.groupCollapsed("View the final response here."),a.log(r||"[No response returned]"),a.groupEnd())}};var re={cacheWillUpdate:async({response:r})=>r.status===200||r.status===0?r:null};var V=class extends g{constructor(e={}){super(e),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(re),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0,!1!=="production"&&this._networkTimeoutSeconds&&p.isType(this._networkTimeoutSeconds,"number",{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"constructor",paramName:"networkTimeoutSeconds"})}async _handle(e,t){let o=[];!1!=="production"&&p.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"handle",paramName:"makeRequest"});let s=[],n;if(this._networkTimeoutSeconds){let{id:u,promise:w}=this._getTimeoutPromise({request:e,logs:o,handler:t});n=u,s.push(w)}let i=this._getNetworkPromise({timeoutId:n,request:e,logs:o,handler:t});s.push(i);let c=await t.waitUntil((async()=>await t.waitUntil(Promise.race(s))||await i)());if(!1!=="production"){a.groupCollapsed(x.strategyStart(this.constructor.name,e));for(let u of o)a.log(u);x.printFinalResponse(c),a.groupEnd()}if(!c)throw new l("no-response",{url:e.url});return c}_getTimeoutPromise({request:e,logs:t,handler:o}){let s;return{promise:new Promise(i=>{s=setTimeout(async()=>{!1!=="production"&&t.push(`Timing out the network response at ${this._networkTimeoutSeconds} seconds.`),i(await o.cacheMatch(e))},this._networkTimeoutSeconds*1e3)}),id:s}}async _getNetworkPromise({timeoutId:e,request:t,logs:o,handler:s}){let n,i;try{i=await s.fetchAndCachePut(t)}catch(c){c instanceof Error&&(n=c)}return e&&clearTimeout(e),!1!=="production"&&(i?o.push("Got response from network."):o.push("Unable to get a response from the network. Will respond with a cached response.")),(n||!i)&&(i=await s.cacheMatch(t),!1!=="production"&&(i?o.push(`Found a cached response in the '${this.cacheName}' cache.`):o.push(`No response found in the '${this.cacheName}' cache.`))),i}};try{self["workbox:cacheable-response:6.5.2"]&&_()}catch{}var W=class{constructor(e={}){if(!1!=="production"){if(!(e.statuses||e.headers))throw new l("statuses-or-headers-required",{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor"});e.statuses&&p.isArray(e.statuses,{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor",paramName:"config.statuses"}),e.headers&&p.isType(e.headers,"object",{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor",paramName:"config.headers"})}this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){!1!=="production"&&p.isInstance(e,Response,{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"isResponseCacheable",paramName:"response"});let t=!0;if(this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some(o=>e.headers.get(o)===this._headers[o])),!1!=="production"&&!t){a.groupCollapsed(`The request for '${h(e.url)}' returned a response that does not meet the criteria for being cached.`),a.groupCollapsed("View cacheability criteria here."),a.log("Cacheable statuses: "+JSON.stringify(this._statuses)),a.log("Cacheable headers: "+JSON.stringify(this._headers,null,2)),a.groupEnd();let o={};e.headers.forEach((s,n)=>{o[n]=s}),a.groupCollapsed("View response status and headers here."),a.log(`Response status: ${e.status}`),a.log("Response headers: "+JSON.stringify(o,null,2)),a.groupEnd(),a.groupCollapsed("View full response details here."),a.log(e.headers),a.log(e),a.groupEnd(),a.groupEnd()}return t}};var A=class{constructor(e){this.cacheWillUpdate=async({response:t})=>this._cacheableResponse.isResponseCacheable(t)?t:null,this._cacheableResponse=new W(e)}};self.skipWaiting();te();ee(self.__WB_MANIFEST||[]);L(({url:r})=>r.origin===self.origin&&r.pathname.startsWith("/api/geo"),new V({cacheName:"geo-loc",plugins:[new A({statuses:[0,200]})]}));var fe=self;fe.addEventListener("message",function(r){r.data&&r.data.type==="SKIP_WAITING"&&fe.skipWaiting()});})();
